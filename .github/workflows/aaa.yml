name: Hello World

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - 'main'
permissions:
  contents: read
  actions: read
  checks: write

jobs:
  hello:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Print Hello World
        run: echo "Hello World"

      - name: Add .env file
        run: echo "${{ secrets.DEV_ENV }}" > .env

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Create Reports Directory
        run: mkdir -p reports
  
      - name: Run Tests and Capture Output
        run: npm test
        
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JEST Tests
          path: reports/test-results.xml
          reporter: jest-junit
          fail-on-error: false
            
      - name: View Test Results
        run: cat reports/test-results.xml
        
      - name: Log Variables
        run: |
          echo "GITHUB_TOKEN: $GITHUB_TOKEN"
          echo "comment_body: $comment_body"
          echo "Repository: ${{ github.repository }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"

      - name: Comment Check Run
        uses: actions/github-script@v7
        with:
          script: |
            const { context, github } = require('@actions/github');
      
            // Lấy ID của check run mới nhất
            const checkRunId = context.payload.check_run.id;
      
            // Gọi API để lấy thông tin của check run
            const response = await github.checks.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkRunId,
            });
      
            // Lấy nội dung của bảng check run
            const checkRunOutput = response.data.output;
      
            // Tạo comment với nội dung của bảng check run
            github.issues.createComment({
              ...context.repo,
              issue_number: context.payload.pull_request.number,
              body: `Check the detailed test results [here](${checkRunOutput.summary})`,
            });
        
            
    #   - name: Run Tests and Capture Output
    #     run: npm test > test-results.txt || true

    #   - name: View Test Results
    #     run: cat test-results.txt
    
      - name: Comment PR with Test Results
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          comment_body=$(cat reports/test-results.xml)
          if [ -z "$comment_body" ]; then
            comment_body="No test results found."
          fi
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\":\"Test Results:\\n\`\`\`\\n${comment_body}\\n\`\`\`\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"